saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "ApplyAdam"
        input_arg {
          name: "var"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "m"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "v"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "beta1_power"
          type_attr: "T"
        }
        input_arg {
          name: "beta2_power"
          type_attr: "T"
        }
        input_arg {
          name: "lr"
          type_attr: "T"
        }
        input_arg {
          name: "beta1"
          type_attr: "T"
        }
        input_arg {
          name: "beta2"
          type_attr: "T"
        }
        input_arg {
          name: "epsilon"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        output_arg {
          name: "out"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "use_nesterov"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BiasAddGrad"
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Conv2D"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropFilter"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropInput"
        input_arg {
          name: "input_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Floor"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "L2Loss"
        input_arg {
          name: "t"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "LogSoftmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "logsoftmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "MaxPool"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_QINT8
            }
          }
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
              s: "NCHW_VECT_C"
            }
          }
        }
      }
      op {
        name: "MaxPoolGrad"
        input_arg {
          name: "orig_input"
          type_attr: "T"
        }
        input_arg {
          name: "orig_output"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Softmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "softmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "SoftmaxCrossEntropyWithLogits"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        input_arg {
          name: "labels"
          type_attr: "T"
        }
        output_arg {
          name: "loss"
          type_attr: "T"
        }
        output_arg {
          name: "backprop"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Squeeze"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "squeeze_dims"
          type: "list(int)"
          default_value {
            list {
            }
          }
          has_minimum: true
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "TruncatedNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "ZerosLike"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
    }
    tags: "serve"
    tensorflow_version: "1.7.0"
    tensorflow_git_version: "b\'unknown\'"
  }
  graph_def {
    node {
      name: "input_prom"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 2001
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    node {
      name: "in_training_mode"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    node {
      name: "kr"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\004\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.40824830532073975
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "conv1d/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv1d/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "conv1d/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "conv1d/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "conv1d/kernel/Initializer/truncated_normal/mul"
      input: "conv1d/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 4
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d/kernel/Assign"
      op: "Assign"
      input: "conv1d/kernel"
      input: "conv1d/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/kernel/read"
      op: "Identity"
      input: "conv1d/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/Square"
      op: "Square"
      input: "conv1d/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/mul/x"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.9999999494757503e-05
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/mul"
      op: "Mul"
      input: "conv1d/kernel/Regularizer/mul/x"
      input: "conv1d/kernel/Regularizer/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/Sum"
      op: "Sum"
      input: "conv1d/kernel/Regularizer/mul"
      input: "conv1d/kernel/Regularizer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/add/x"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Regularizer/add"
      op: "Add"
      input: "conv1d/kernel/Regularizer/add/x"
      input: "conv1d/kernel/Regularizer/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Initializer/zeros"
      op: "Fill"
      input: "conv1d/bias/Initializer/zeros/shape_as_tensor"
      input: "conv1d/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d/bias/Assign"
      op: "Assign"
      input: "conv1d/bias"
      input: "conv1d/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/bias/read"
      op: "Identity"
      input: "conv1d/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d/conv1d/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d/conv1d/ExpandDims"
      op: "ExpandDims"
      input: "input_prom"
      input: "conv1d/conv1d/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2001
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/conv1d/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "conv1d/conv1d/ExpandDims_1"
      op: "ExpandDims"
      input: "conv1d/kernel/read"
      input: "conv1d/conv1d/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/conv1d/Conv2D"
      op: "Conv2D"
      input: "conv1d/conv1d/ExpandDims"
      input: "conv1d/conv1d/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/conv1d/Squeeze"
      op: "Squeeze"
      input: "conv1d/conv1d/Conv2D"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d/BiasAdd"
      op: "BiasAdd"
      input: "conv1d/conv1d/Squeeze"
      input: "conv1d/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "LeakyRelu/alpha"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "LeakyRelu/mul"
      op: "Mul"
      input: "LeakyRelu/alpha"
      input: "conv1d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "LeakyRelu/Maximum"
      op: "Maximum"
      input: "LeakyRelu/mul"
      input: "conv1d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "maxpool1/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "maxpool1/ExpandDims"
      op: "ExpandDims"
      input: "LeakyRelu/Maximum"
      input: "maxpool1/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "maxpool1/MaxPool"
      op: "MaxPool"
      input: "maxpool1/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 40
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 1
            i: 50
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 50
            i: 1
          }
        }
      }
    }
    node {
      name: "maxpool1/Squeeze"
      op: "Squeeze"
      input: "maxpool1/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.07216878235340118
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "conv1d_1/kernel/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "conv1d_1/kernel/Initializer/truncated_normal/TruncatedNormal"
      input: "conv1d_1/kernel/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Initializer/truncated_normal"
      op: "Add"
      input: "conv1d_1/kernel/Initializer/truncated_normal/mul"
      input: "conv1d_1/kernel/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Assign"
      op: "Assign"
      input: "conv1d_1/kernel"
      input: "conv1d_1/kernel/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/kernel/read"
      op: "Identity"
      input: "conv1d_1/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/Square"
      op: "Square"
      input: "conv1d_1/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/mul/x"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.9999999494757503e-05
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/mul"
      op: "Mul"
      input: "conv1d_1/kernel/Regularizer/mul/x"
      input: "conv1d_1/kernel/Regularizer/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/Sum"
      op: "Sum"
      input: "conv1d_1/kernel/Regularizer/mul"
      input: "conv1d_1/kernel/Regularizer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/add/x"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Regularizer/add"
      op: "Add"
      input: "conv1d_1/kernel/Regularizer/add/x"
      input: "conv1d_1/kernel/Regularizer/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 256
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Initializer/zeros"
      op: "Fill"
      input: "conv1d_1/bias/Initializer/zeros/shape_as_tensor"
      input: "conv1d_1/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d_1/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d_1/bias/Assign"
      op: "Assign"
      input: "conv1d_1/bias"
      input: "conv1d_1/bias/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/bias/read"
      op: "Identity"
      input: "conv1d_1/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d_1/conv1d/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d_1/conv1d/ExpandDims"
      op: "ExpandDims"
      input: "maxpool1/Squeeze"
      input: "conv1d_1/conv1d/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 40
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/conv1d/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "conv1d_1/conv1d/ExpandDims_1"
      op: "ExpandDims"
      input: "conv1d_1/kernel/read"
      input: "conv1d_1/conv1d/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/conv1d/Conv2D"
      op: "Conv2D"
      input: "conv1d_1/conv1d/ExpandDims"
      input: "conv1d_1/conv1d/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/conv1d/Squeeze"
      op: "Squeeze"
      input: "conv1d_1/conv1d/Conv2D"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d_1/BiasAdd"
      op: "BiasAdd"
      input: "conv1d_1/conv1d/Squeeze"
      input: "conv1d_1/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "LeakyRelu_1/alpha"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "LeakyRelu_1/mul"
      op: "Mul"
      input: "LeakyRelu_1/alpha"
      input: "conv1d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "LeakyRelu_1/Maximum"
      op: "Maximum"
      input: "LeakyRelu_1/mul"
      input: "conv1d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "dropout/Shape"
      op: "Shape"
      input: "LeakyRelu_1/Maximum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dropout/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dropout/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dropout/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dropout/random_uniform/sub"
      op: "Sub"
      input: "dropout/random_uniform/max"
      input: "dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dropout/random_uniform/mul"
      op: "Mul"
      input: "dropout/random_uniform/RandomUniform"
      input: "dropout/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "dropout/random_uniform"
      op: "Add"
      input: "dropout/random_uniform/mul"
      input: "dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "dropout/add"
      op: "Add"
      input: "kr"
      input: "dropout/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "dropout/Floor"
      op: "Floor"
      input: "dropout/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "dropout/div"
      op: "RealDiv"
      input: "LeakyRelu_1/Maximum"
      input: "kr"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "dropout/mul"
      op: "Mul"
      input: "dropout/div"
      input: "dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000(\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.02420378290116787
          }
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.02420378290116787
          }
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "w_output_p/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform/sub"
      op: "Sub"
      input: "w_output_p/Initializer/random_uniform/max"
      input: "w_output_p/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform/mul"
      op: "Mul"
      input: "w_output_p/Initializer/random_uniform/RandomUniform"
      input: "w_output_p/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "w_output_p/Initializer/random_uniform"
      op: "Add"
      input: "w_output_p/Initializer/random_uniform/mul"
      input: "w_output_p/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "w_output_p"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10240
            }
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "w_output_p/Assign"
      op: "Assign"
      input: "w_output_p"
      input: "w_output_p/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "w_output_p/read"
      op: "Identity"
      input: "w_output_p"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1.2247449159622192
          }
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.2247449159622192
          }
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "bias_output_p/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform/sub"
      op: "Sub"
      input: "bias_output_p/Initializer/random_uniform/max"
      input: "bias_output_p/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform/mul"
      op: "Mul"
      input: "bias_output_p/Initializer/random_uniform/RandomUniform"
      input: "bias_output_p/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "bias_output_p/Initializer/random_uniform"
      op: "Add"
      input: "bias_output_p/Initializer/random_uniform/mul"
      input: "bias_output_p/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "bias_output_p"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bias_output_p/Assign"
      op: "Assign"
      input: "bias_output_p"
      input: "bias_output_p/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bias_output_p/read"
      op: "Identity"
      input: "bias_output_p"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "output_p/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\000(\000\000"
          }
        }
      }
    }
    node {
      name: "output_p/Reshape"
      op: "Reshape"
      input: "dropout/mul"
      input: "output_p/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10240
              }
            }
          }
        }
      }
    }
    node {
      name: "output_p/MatMul"
      op: "MatMul"
      input: "output_p/Reshape"
      input: "w_output_p/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "output_p/Add"
      op: "Add"
      input: "output_p/MatMul"
      input: "bias_output_p/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Shape"
      op: "Shape"
      input: "output_p/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Shape_1"
      op: "Shape"
      input: "output_p/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Sub/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Sub"
      op: "Sub"
      input: "softmax_cross_entropy_with_logits/Rank_1"
      input: "softmax_cross_entropy_with_logits/Sub/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice/begin"
      op: "Pack"
      input: "softmax_cross_entropy_with_logits/Sub"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice"
      op: "Slice"
      input: "softmax_cross_entropy_with_logits/Shape_1"
      input: "softmax_cross_entropy_with_logits/Slice/begin"
      input: "softmax_cross_entropy_with_logits/Slice/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/concat/values_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/concat"
      op: "ConcatV2"
      input: "softmax_cross_entropy_with_logits/concat/values_0"
      input: "softmax_cross_entropy_with_logits/Slice"
      input: "softmax_cross_entropy_with_logits/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Reshape"
      op: "Reshape"
      input: "output_p/Add"
      input: "softmax_cross_entropy_with_logits/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Rank_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Shape_2"
      op: "Shape"
      input: "Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Sub_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Sub_1"
      op: "Sub"
      input: "softmax_cross_entropy_with_logits/Rank_2"
      input: "softmax_cross_entropy_with_logits/Sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice_1/begin"
      op: "Pack"
      input: "softmax_cross_entropy_with_logits/Sub_1"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice_1/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice_1"
      op: "Slice"
      input: "softmax_cross_entropy_with_logits/Shape_2"
      input: "softmax_cross_entropy_with_logits/Slice_1/begin"
      input: "softmax_cross_entropy_with_logits/Slice_1/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/concat_1/values_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/concat_1"
      op: "ConcatV2"
      input: "softmax_cross_entropy_with_logits/concat_1/values_0"
      input: "softmax_cross_entropy_with_logits/Slice_1"
      input: "softmax_cross_entropy_with_logits/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Reshape_1"
      op: "Reshape"
      input: "Placeholder"
      input: "softmax_cross_entropy_with_logits/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits"
      op: "SoftmaxCrossEntropyWithLogits"
      input: "softmax_cross_entropy_with_logits/Reshape"
      input: "softmax_cross_entropy_with_logits/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Sub_2"
      op: "Sub"
      input: "softmax_cross_entropy_with_logits/Rank"
      input: "softmax_cross_entropy_with_logits/Sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice_2/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice_2/size"
      op: "Pack"
      input: "softmax_cross_entropy_with_logits/Sub_2"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Slice_2"
      op: "Slice"
      input: "softmax_cross_entropy_with_logits/Shape"
      input: "softmax_cross_entropy_with_logits/Slice_2/begin"
      input: "softmax_cross_entropy_with_logits/Slice_2/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "softmax_cross_entropy_with_logits/Reshape_2"
      op: "Reshape"
      input: "softmax_cross_entropy_with_logits"
      input: "softmax_cross_entropy_with_logits/Slice_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Softmax"
      op: "Softmax"
      input: "output_p/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "L2Loss"
      op: "L2Loss"
      input: "w_output_p/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "mul"
      op: "Mul"
      input: "mul/x"
      input: "L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Add"
      op: "Add"
      input: "softmax_cross_entropy_with_logits/Reshape_2"
      input: "mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output_prom"
      op: "Identity"
      input: "Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Shape"
      input: "Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/Add_grad/Shape"
      op: "Shape"
      input: "softmax_cross_entropy_with_logits/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/Add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/Add_grad/Shape"
      input: "gradients/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Add_grad/Sum"
      op: "Sum"
      input: "gradients/Fill"
      input: "gradients/Add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/Add_grad/Reshape"
      op: "Reshape"
      input: "gradients/Add_grad/Sum"
      input: "gradients/Add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Add_grad/Sum_1"
      op: "Sum"
      input: "gradients/Fill"
      input: "gradients/Add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/Add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/Add_grad/Sum_1"
      input: "gradients/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/Add_grad/Reshape"
      input: "^gradients/Add_grad/Reshape_1"
    }
    node {
      name: "gradients/Add_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/Add_grad/Reshape"
      input: "^gradients/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/Add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/Add_grad/Reshape_1"
      input: "^gradients/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/Add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
      op: "Shape"
      input: "softmax_cross_entropy_with_logits"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/Add_grad/tuple/control_dependency"
      input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/mul_grad/Mul"
      op: "Mul"
      input: "gradients/Add_grad/tuple/control_dependency_1"
      input: "L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/Add_grad/tuple/control_dependency_1"
      input: "mul/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/mul_grad/Mul"
      input: "^gradients/mul_grad/Mul_1"
    }
    node {
      name: "gradients/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/mul_grad/Mul"
      input: "^gradients/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/mul_grad/Mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/mul_grad/Mul_1"
      input: "^gradients/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/mul_grad/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like"
      op: "ZerosLike"
      input: "softmax_cross_entropy_with_logits:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims"
      op: "ExpandDims"
      input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
      input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/mul"
      op: "Mul"
      input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims"
      input: "softmax_cross_entropy_with_logits:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax"
      op: "LogSoftmax"
      input: "softmax_cross_entropy_with_logits/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/Neg"
      op: "Neg"
      input: "gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
      op: "ExpandDims"
      input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
      input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/mul_1"
      op: "Mul"
      input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
      input: "gradients/softmax_cross_entropy_with_logits_grad/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/softmax_cross_entropy_with_logits_grad/mul"
      input: "^gradients/softmax_cross_entropy_with_logits_grad/mul_1"
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/softmax_cross_entropy_with_logits_grad/mul"
      input: "^gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/softmax_cross_entropy_with_logits_grad/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/softmax_cross_entropy_with_logits_grad/mul_1"
      input: "^gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/softmax_cross_entropy_with_logits_grad/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/L2Loss_grad/mul"
      op: "Mul"
      input: "w_output_p/read"
      input: "gradients/mul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
      op: "Shape"
      input: "output_p/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      op: "Reshape"
      input: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency"
      input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/Shape"
      op: "Shape"
      input: "output_p/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/output_p/Add_grad/Shape"
      input: "gradients/output_p/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/Sum"
      op: "Sum"
      input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      input: "gradients/output_p/Add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/Reshape"
      op: "Reshape"
      input: "gradients/output_p/Add_grad/Sum"
      input: "gradients/output_p/Add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/Sum_1"
      op: "Sum"
      input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
      input: "gradients/output_p/Add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/output_p/Add_grad/Sum_1"
      input: "gradients/output_p/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/output_p/Add_grad/Reshape"
      input: "^gradients/output_p/Add_grad/Reshape_1"
    }
    node {
      name: "gradients/output_p/Add_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/output_p/Add_grad/Reshape"
      input: "^gradients/output_p/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/output_p/Add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/output_p/Add_grad/Reshape_1"
      input: "^gradients/output_p/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/output_p/Add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/output_p/Add_grad/tuple/control_dependency"
      input: "w_output_p/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10240
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/output_p/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "output_p/Reshape"
      input: "gradients/output_p/Add_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/output_p/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/output_p/MatMul_grad/MatMul"
      input: "^gradients/output_p/MatMul_grad/MatMul_1"
    }
    node {
      name: "gradients/output_p/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/output_p/MatMul_grad/MatMul"
      input: "^gradients/output_p/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/output_p/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10240
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/output_p/MatMul_grad/MatMul_1"
      input: "^gradients/output_p/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/output_p/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output_p/Reshape_grad/Shape"
      op: "Shape"
      input: "dropout/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output_p/Reshape_grad/Reshape"
      op: "Reshape"
      input: "gradients/output_p/MatMul_grad/tuple/control_dependency"
      input: "gradients/output_p/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/L2Loss_grad/mul"
      input: "gradients/output_p/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/L2Loss_grad/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Shape"
      op: "Shape"
      input: "dropout/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Shape_1"
      op: "Shape"
      input: "dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/mul_grad/Shape"
      input: "gradients/dropout/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Mul"
      op: "Mul"
      input: "gradients/output_p/Reshape_grad/Reshape"
      input: "dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/mul_grad/Mul"
      input: "gradients/dropout/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/mul_grad/Sum"
      input: "gradients/dropout/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Mul_1"
      op: "Mul"
      input: "dropout/div"
      input: "gradients/output_p/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/mul_grad/Mul_1"
      input: "gradients/dropout/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/mul_grad/Sum_1"
      input: "gradients/dropout/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/dropout/mul_grad/Reshape"
      input: "^gradients/dropout/mul_grad/Reshape_1"
    }
    node {
      name: "gradients/dropout/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/dropout/mul_grad/Reshape"
      input: "^gradients/dropout/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/dropout/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/dropout/mul_grad/Reshape_1"
      input: "^gradients/dropout/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/dropout/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Shape"
      op: "Shape"
      input: "LeakyRelu_1/Maximum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Shape_1"
      op: "Shape"
      input: "kr"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/div_grad/Shape"
      input: "gradients/dropout/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/dropout/mul_grad/tuple/control_dependency"
      input: "kr"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/div_grad/RealDiv"
      input: "gradients/dropout/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/div_grad/Sum"
      input: "gradients/dropout/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Neg"
      op: "Neg"
      input: "LeakyRelu_1/Maximum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/dropout/div_grad/Neg"
      input: "kr"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/dropout/div_grad/RealDiv_1"
      input: "kr"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/mul"
      op: "Mul"
      input: "gradients/dropout/mul_grad/tuple/control_dependency"
      input: "gradients/dropout/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/div_grad/mul"
      input: "gradients/dropout/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/div_grad/Sum_1"
      input: "gradients/dropout/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/dropout/div_grad/Reshape"
      input: "^gradients/dropout/div_grad/Reshape_1"
    }
    node {
      name: "gradients/dropout/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/dropout/div_grad/Reshape"
      input: "^gradients/dropout/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/dropout/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/dropout/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/dropout/div_grad/Reshape_1"
      input: "^gradients/dropout/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/dropout/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Shape"
      op: "Shape"
      input: "LeakyRelu_1/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Shape_1"
      op: "Shape"
      input: "conv1d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Shape_2"
      op: "Shape"
      input: "gradients/dropout/div_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/zeros"
      op: "Fill"
      input: "gradients/LeakyRelu_1/Maximum_grad/Shape_2"
      input: "gradients/LeakyRelu_1/Maximum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "LeakyRelu_1/mul"
      input: "conv1d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/LeakyRelu_1/Maximum_grad/Shape"
      input: "gradients/LeakyRelu_1/Maximum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Select"
      op: "Select"
      input: "gradients/LeakyRelu_1/Maximum_grad/GreaterEqual"
      input: "gradients/dropout/div_grad/tuple/control_dependency"
      input: "gradients/LeakyRelu_1/Maximum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Select_1"
      op: "Select"
      input: "gradients/LeakyRelu_1/Maximum_grad/GreaterEqual"
      input: "gradients/LeakyRelu_1/Maximum_grad/zeros"
      input: "gradients/dropout/div_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Sum"
      op: "Sum"
      input: "gradients/LeakyRelu_1/Maximum_grad/Select"
      input: "gradients/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Reshape"
      op: "Reshape"
      input: "gradients/LeakyRelu_1/Maximum_grad/Sum"
      input: "gradients/LeakyRelu_1/Maximum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Sum_1"
      op: "Sum"
      input: "gradients/LeakyRelu_1/Maximum_grad/Select_1"
      input: "gradients/LeakyRelu_1/Maximum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/LeakyRelu_1/Maximum_grad/Sum_1"
      input: "gradients/LeakyRelu_1/Maximum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/LeakyRelu_1/Maximum_grad/Reshape"
      input: "^gradients/LeakyRelu_1/Maximum_grad/Reshape_1"
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/LeakyRelu_1/Maximum_grad/Reshape"
      input: "^gradients/LeakyRelu_1/Maximum_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu_1/Maximum_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/LeakyRelu_1/Maximum_grad/Reshape_1"
      input: "^gradients/LeakyRelu_1/Maximum_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu_1/Maximum_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Shape_1"
      op: "Shape"
      input: "conv1d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/LeakyRelu_1/mul_grad/Shape"
      input: "gradients/LeakyRelu_1/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Mul"
      op: "Mul"
      input: "gradients/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
      input: "conv1d_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Sum"
      op: "Sum"
      input: "gradients/LeakyRelu_1/mul_grad/Mul"
      input: "gradients/LeakyRelu_1/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/LeakyRelu_1/mul_grad/Sum"
      input: "gradients/LeakyRelu_1/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Mul_1"
      op: "Mul"
      input: "LeakyRelu_1/alpha"
      input: "gradients/LeakyRelu_1/Maximum_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/LeakyRelu_1/mul_grad/Mul_1"
      input: "gradients/LeakyRelu_1/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/LeakyRelu_1/mul_grad/Sum_1"
      input: "gradients/LeakyRelu_1/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/LeakyRelu_1/mul_grad/Reshape"
      input: "^gradients/LeakyRelu_1/mul_grad/Reshape_1"
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/LeakyRelu_1/mul_grad/Reshape"
      input: "^gradients/LeakyRelu_1/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu_1/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/LeakyRelu_1/mul_grad/Reshape_1"
      input: "^gradients/LeakyRelu_1/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu_1/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/LeakyRelu_1/Maximum_grad/tuple/control_dependency_1"
      input: "gradients/LeakyRelu_1/mul_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu_1/Maximum_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/AddN_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "gradients/conv1d_1/BiasAdd_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/AddN_1"
      input: "^gradients/conv1d_1/BiasAdd_grad/BiasAddGrad"
    }
    node {
      name: "gradients/conv1d_1/BiasAdd_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/AddN_1"
      input: "^gradients/conv1d_1/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu_1/Maximum_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/conv1d_1/BiasAdd_grad/BiasAddGrad"
      input: "^gradients/conv1d_1/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/conv1d_1/BiasAdd_grad/BiasAddGrad"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Squeeze_grad/Shape"
      op: "Shape"
      input: "conv1d_1/conv1d/Conv2D"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "gradients/conv1d_1/BiasAdd_grad/tuple/control_dependency"
      input: "gradients/conv1d_1/conv1d/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 40
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "conv1d_1/conv1d/ExpandDims"
      input: "conv1d_1/conv1d/ExpandDims_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "gradients/conv1d_1/conv1d/Conv2D_grad/ShapeN"
      input: "conv1d_1/conv1d/ExpandDims_1"
      input: "gradients/conv1d_1/conv1d/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1d_1/conv1d/ExpandDims"
      input: "gradients/conv1d_1/conv1d/Conv2D_grad/Const"
      input: "gradients/conv1d_1/conv1d/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      input: "^gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
      input: "^gradients/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropInput"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 40
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      input: "^gradients/conv1d_1/conv1d/Conv2D_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/conv1d_1/conv1d/Conv2D_grad/Conv2DBackpropFilter"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/ExpandDims_grad/Shape"
      op: "Shape"
      input: "maxpool1/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/ExpandDims_grad/Reshape"
      op: "Reshape"
      input: "gradients/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency"
      input: "gradients/conv1d_1/conv1d/ExpandDims_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "gradients/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/conv1d_1/conv1d/Conv2D_grad/tuple/control_dependency_1"
      input: "gradients/conv1d_1/conv1d/ExpandDims_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/maxpool1/Squeeze_grad/Shape"
      op: "Shape"
      input: "maxpool1/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/maxpool1/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "gradients/conv1d_1/conv1d/ExpandDims_grad/Reshape"
      input: "gradients/maxpool1/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 40
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/maxpool1/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "maxpool1/ExpandDims"
      input: "maxpool1/MaxPool"
      input: "gradients/maxpool1/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 1
            i: 50
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 50
            i: 1
          }
        }
      }
    }
    node {
      name: "gradients/maxpool1/ExpandDims_grad/Shape"
      op: "Shape"
      input: "LeakyRelu/Maximum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/maxpool1/ExpandDims_grad/Reshape"
      op: "Reshape"
      input: "gradients/maxpool1/MaxPool_grad/MaxPoolGrad"
      input: "gradients/maxpool1/ExpandDims_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Shape"
      op: "Shape"
      input: "LeakyRelu/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Shape_1"
      op: "Shape"
      input: "conv1d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Shape_2"
      op: "Shape"
      input: "gradients/maxpool1/ExpandDims_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/zeros"
      op: "Fill"
      input: "gradients/LeakyRelu/Maximum_grad/Shape_2"
      input: "gradients/LeakyRelu/Maximum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "LeakyRelu/mul"
      input: "conv1d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/LeakyRelu/Maximum_grad/Shape"
      input: "gradients/LeakyRelu/Maximum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Select"
      op: "Select"
      input: "gradients/LeakyRelu/Maximum_grad/GreaterEqual"
      input: "gradients/maxpool1/ExpandDims_grad/Reshape"
      input: "gradients/LeakyRelu/Maximum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Select_1"
      op: "Select"
      input: "gradients/LeakyRelu/Maximum_grad/GreaterEqual"
      input: "gradients/LeakyRelu/Maximum_grad/zeros"
      input: "gradients/maxpool1/ExpandDims_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Sum"
      op: "Sum"
      input: "gradients/LeakyRelu/Maximum_grad/Select"
      input: "gradients/LeakyRelu/Maximum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Reshape"
      op: "Reshape"
      input: "gradients/LeakyRelu/Maximum_grad/Sum"
      input: "gradients/LeakyRelu/Maximum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Sum_1"
      op: "Sum"
      input: "gradients/LeakyRelu/Maximum_grad/Select_1"
      input: "gradients/LeakyRelu/Maximum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/LeakyRelu/Maximum_grad/Sum_1"
      input: "gradients/LeakyRelu/Maximum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/LeakyRelu/Maximum_grad/Reshape"
      input: "^gradients/LeakyRelu/Maximum_grad/Reshape_1"
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/LeakyRelu/Maximum_grad/Reshape"
      input: "^gradients/LeakyRelu/Maximum_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu/Maximum_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/LeakyRelu/Maximum_grad/Reshape_1"
      input: "^gradients/LeakyRelu/Maximum_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu/Maximum_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Shape_1"
      op: "Shape"
      input: "conv1d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/LeakyRelu/mul_grad/Shape"
      input: "gradients/LeakyRelu/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Mul"
      op: "Mul"
      input: "gradients/LeakyRelu/Maximum_grad/tuple/control_dependency"
      input: "conv1d/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Sum"
      op: "Sum"
      input: "gradients/LeakyRelu/mul_grad/Mul"
      input: "gradients/LeakyRelu/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/LeakyRelu/mul_grad/Sum"
      input: "gradients/LeakyRelu/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Mul_1"
      op: "Mul"
      input: "LeakyRelu/alpha"
      input: "gradients/LeakyRelu/Maximum_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/LeakyRelu/mul_grad/Mul_1"
      input: "gradients/LeakyRelu/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/LeakyRelu/mul_grad/Sum_1"
      input: "gradients/LeakyRelu/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/LeakyRelu/mul_grad/Reshape"
      input: "^gradients/LeakyRelu/mul_grad/Reshape_1"
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/LeakyRelu/mul_grad/Reshape"
      input: "^gradients/LeakyRelu/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/LeakyRelu/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/LeakyRelu/mul_grad/Reshape_1"
      input: "^gradients/LeakyRelu/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/LeakyRelu/Maximum_grad/tuple/control_dependency_1"
      input: "gradients/LeakyRelu/mul_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu/Maximum_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/AddN_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "gradients/conv1d/BiasAdd_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/AddN_2"
      input: "^gradients/conv1d/BiasAdd_grad/BiasAddGrad"
    }
    node {
      name: "gradients/conv1d/BiasAdd_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/AddN_2"
      input: "^gradients/conv1d/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/LeakyRelu/Maximum_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/BiasAdd_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/conv1d/BiasAdd_grad/BiasAddGrad"
      input: "^gradients/conv1d/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/conv1d/BiasAdd_grad/BiasAddGrad"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Squeeze_grad/Shape"
      op: "Shape"
      input: "conv1d/conv1d/Conv2D"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "gradients/conv1d/BiasAdd_grad/tuple/control_dependency"
      input: "gradients/conv1d/conv1d/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2001
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "conv1d/conv1d/ExpandDims"
      input: "conv1d/conv1d/ExpandDims_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\003\000\000\000\004\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "gradients/conv1d/conv1d/Conv2D_grad/ShapeN"
      input: "conv1d/conv1d/ExpandDims_1"
      input: "gradients/conv1d/conv1d/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1d/conv1d/ExpandDims"
      input: "gradients/conv1d/conv1d/Conv2D_grad/Const"
      input: "gradients/conv1d/conv1d/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      input: "^gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
      input: "^gradients/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropInput"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2001
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      input: "^gradients/conv1d/conv1d/Conv2D_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/conv1d/conv1d/Conv2D_grad/Conv2DBackpropFilter"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/ExpandDims_1_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\004\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "gradients/conv1d/conv1d/ExpandDims_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/conv1d/conv1d/Conv2D_grad/tuple/control_dependency_1"
      input: "gradients/conv1d/conv1d/ExpandDims_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "beta1_power/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "beta1_power"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "beta1_power/Assign"
      op: "Assign"
      input: "beta1_power"
      input: "beta1_power/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "beta1_power/read"
      op: "Identity"
      input: "beta1_power"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "beta2_power/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "beta2_power"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "beta2_power/Assign"
      op: "Assign"
      input: "beta2_power"
      input: "beta2_power/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "beta2_power/read"
      op: "Identity"
      input: "beta2_power"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\004\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam/Initializer/zeros"
      op: "Fill"
      input: "conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
      input: "conv1d/kernel/Adam/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 4
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam/Assign"
      op: "Assign"
      input: "conv1d/kernel/Adam"
      input: "conv1d/kernel/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam/read"
      op: "Identity"
      input: "conv1d/kernel/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\004\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam_1/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam_1/Initializer/zeros"
      op: "Fill"
      input: "conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
      input: "conv1d/kernel/Adam_1/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 4
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam_1/Assign"
      op: "Assign"
      input: "conv1d/kernel/Adam_1"
      input: "conv1d/kernel/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/kernel/Adam_1/read"
      op: "Identity"
      input: "conv1d/kernel/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Adam/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Adam/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Adam/Initializer/zeros"
      op: "Fill"
      input: "conv1d/bias/Adam/Initializer/zeros/shape_as_tensor"
      input: "conv1d/bias/Adam/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d/bias/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d/bias/Adam/Assign"
      op: "Assign"
      input: "conv1d/bias/Adam"
      input: "conv1d/bias/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/bias/Adam/read"
      op: "Identity"
      input: "conv1d/bias/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Adam_1/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Adam_1/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d/bias/Adam_1/Initializer/zeros"
      op: "Fill"
      input: "conv1d/bias/Adam_1/Initializer/zeros/shape_as_tensor"
      input: "conv1d/bias/Adam_1/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d/bias/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d/bias/Adam_1/Assign"
      op: "Assign"
      input: "conv1d/bias/Adam_1"
      input: "conv1d/bias/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d/bias/Adam_1/read"
      op: "Identity"
      input: "conv1d/bias/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam/Initializer/zeros"
      op: "Fill"
      input: "conv1d_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
      input: "conv1d_1/kernel/Adam/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam/Assign"
      op: "Assign"
      input: "conv1d_1/kernel/Adam"
      input: "conv1d_1/kernel/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam/read"
      op: "Identity"
      input: "conv1d_1/kernel/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam_1/Initializer/zeros"
      op: "Fill"
      input: "conv1d_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
      input: "conv1d_1/kernel/Adam_1/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam_1/Assign"
      op: "Assign"
      input: "conv1d_1/kernel/Adam_1"
      input: "conv1d_1/kernel/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Adam_1/read"
      op: "Identity"
      input: "conv1d_1/kernel/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 256
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam/Initializer/zeros"
      op: "Fill"
      input: "conv1d_1/bias/Adam/Initializer/zeros/shape_as_tensor"
      input: "conv1d_1/bias/Adam/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam/Assign"
      op: "Assign"
      input: "conv1d_1/bias/Adam"
      input: "conv1d_1/bias/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam/read"
      op: "Identity"
      input: "conv1d_1/bias/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 256
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam_1/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam_1/Initializer/zeros"
      op: "Fill"
      input: "conv1d_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
      input: "conv1d_1/bias/Adam_1/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam_1/Assign"
      op: "Assign"
      input: "conv1d_1/bias/Adam_1"
      input: "conv1d_1/bias/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/bias/Adam_1/read"
      op: "Identity"
      input: "conv1d_1/bias/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "w_output_p/Adam/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000(\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "w_output_p/Adam/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "w_output_p/Adam/Initializer/zeros"
      op: "Fill"
      input: "w_output_p/Adam/Initializer/zeros/shape_as_tensor"
      input: "w_output_p/Adam/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "w_output_p/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10240
            }
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "w_output_p/Adam/Assign"
      op: "Assign"
      input: "w_output_p/Adam"
      input: "w_output_p/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "w_output_p/Adam/read"
      op: "Identity"
      input: "w_output_p/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "w_output_p/Adam_1/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000(\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "w_output_p/Adam_1/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "w_output_p/Adam_1/Initializer/zeros"
      op: "Fill"
      input: "w_output_p/Adam_1/Initializer/zeros/shape_as_tensor"
      input: "w_output_p/Adam_1/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "w_output_p/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10240
            }
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "w_output_p/Adam_1/Assign"
      op: "Assign"
      input: "w_output_p/Adam_1"
      input: "w_output_p/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "w_output_p/Adam_1/read"
      op: "Identity"
      input: "w_output_p/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "bias_output_p/Adam/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bias_output_p/Adam/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bias_output_p/Adam/Initializer/zeros"
      op: "Fill"
      input: "bias_output_p/Adam/Initializer/zeros/shape_as_tensor"
      input: "bias_output_p/Adam/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bias_output_p/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bias_output_p/Adam/Assign"
      op: "Assign"
      input: "bias_output_p/Adam"
      input: "bias_output_p/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bias_output_p/Adam/read"
      op: "Identity"
      input: "bias_output_p/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "bias_output_p/Adam_1/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "bias_output_p/Adam_1/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "bias_output_p/Adam_1/Initializer/zeros"
      op: "Fill"
      input: "bias_output_p/Adam_1/Initializer/zeros/shape_as_tensor"
      input: "bias_output_p/Adam_1/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "bias_output_p/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "bias_output_p/Adam_1/Assign"
      op: "Assign"
      input: "bias_output_p/Adam_1"
      input: "bias_output_p/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "bias_output_p/Adam_1/read"
      op: "Identity"
      input: "bias_output_p/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam/learning_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "Adam/beta1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "Adam/beta2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "Adam/epsilon"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.99999993922529e-09
          }
        }
      }
    }
    node {
      name: "Adam/update_conv1d/kernel/ApplyAdam"
      op: "ApplyAdam"
      input: "conv1d/kernel"
      input: "conv1d/kernel/Adam"
      input: "conv1d/kernel/Adam_1"
      input: "beta1_power/read"
      input: "beta2_power/read"
      input: "Adam/learning_rate"
      input: "Adam/beta1"
      input: "Adam/beta2"
      input: "Adam/epsilon"
      input: "gradients/conv1d/conv1d/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adam/update_conv1d/bias/ApplyAdam"
      op: "ApplyAdam"
      input: "conv1d/bias"
      input: "conv1d/bias/Adam"
      input: "conv1d/bias/Adam_1"
      input: "beta1_power/read"
      input: "beta2_power/read"
      input: "Adam/learning_rate"
      input: "Adam/beta1"
      input: "Adam/beta2"
      input: "Adam/epsilon"
      input: "gradients/conv1d/BiasAdd_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adam/update_conv1d_1/kernel/ApplyAdam"
      op: "ApplyAdam"
      input: "conv1d_1/kernel"
      input: "conv1d_1/kernel/Adam"
      input: "conv1d_1/kernel/Adam_1"
      input: "beta1_power/read"
      input: "beta2_power/read"
      input: "Adam/learning_rate"
      input: "Adam/beta1"
      input: "Adam/beta2"
      input: "Adam/epsilon"
      input: "gradients/conv1d_1/conv1d/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adam/update_conv1d_1/bias/ApplyAdam"
      op: "ApplyAdam"
      input: "conv1d_1/bias"
      input: "conv1d_1/bias/Adam"
      input: "conv1d_1/bias/Adam_1"
      input: "beta1_power/read"
      input: "beta2_power/read"
      input: "Adam/learning_rate"
      input: "Adam/beta1"
      input: "Adam/beta2"
      input: "Adam/epsilon"
      input: "gradients/conv1d_1/BiasAdd_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adam/update_w_output_p/ApplyAdam"
      op: "ApplyAdam"
      input: "w_output_p"
      input: "w_output_p/Adam"
      input: "w_output_p/Adam_1"
      input: "beta1_power/read"
      input: "beta2_power/read"
      input: "Adam/learning_rate"
      input: "Adam/beta1"
      input: "Adam/beta2"
      input: "Adam/epsilon"
      input: "gradients/AddN"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adam/update_bias_output_p/ApplyAdam"
      op: "ApplyAdam"
      input: "bias_output_p"
      input: "bias_output_p/Adam"
      input: "bias_output_p/Adam_1"
      input: "beta1_power/read"
      input: "beta2_power/read"
      input: "Adam/learning_rate"
      input: "Adam/beta1"
      input: "Adam/beta2"
      input: "Adam/epsilon"
      input: "gradients/output_p/Add_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Adam/mul"
      op: "Mul"
      input: "beta1_power/read"
      input: "Adam/beta1"
      input: "^Adam/update_conv1d/kernel/ApplyAdam"
      input: "^Adam/update_conv1d/bias/ApplyAdam"
      input: "^Adam/update_conv1d_1/kernel/ApplyAdam"
      input: "^Adam/update_conv1d_1/bias/ApplyAdam"
      input: "^Adam/update_w_output_p/ApplyAdam"
      input: "^Adam/update_bias_output_p/ApplyAdam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/Assign"
      op: "Assign"
      input: "beta1_power"
      input: "Adam/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam/mul_1"
      op: "Mul"
      input: "beta2_power/read"
      input: "Adam/beta2"
      input: "^Adam/update_conv1d/kernel/ApplyAdam"
      input: "^Adam/update_conv1d/bias/ApplyAdam"
      input: "^Adam/update_conv1d_1/kernel/ApplyAdam"
      input: "^Adam/update_conv1d_1/bias/ApplyAdam"
      input: "^Adam/update_w_output_p/ApplyAdam"
      input: "^Adam/update_bias_output_p/ApplyAdam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/Assign_1"
      op: "Assign"
      input: "beta2_power"
      input: "Adam/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam"
      op: "NoOp"
      input: "^Adam/update_conv1d/kernel/ApplyAdam"
      input: "^Adam/update_conv1d/bias/ApplyAdam"
      input: "^Adam/update_conv1d_1/kernel/ApplyAdam"
      input: "^Adam/update_conv1d_1/bias/ApplyAdam"
      input: "^Adam/update_w_output_p/ApplyAdam"
      input: "^Adam/update_bias_output_p/ApplyAdam"
      input: "^Adam/Assign"
      input: "^Adam/Assign_1"
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^conv1d/kernel/Assign"
      input: "^conv1d/bias/Assign"
      input: "^conv1d_1/kernel/Assign"
      input: "^conv1d_1/bias/Assign"
      input: "^w_output_p/Assign"
      input: "^bias_output_p/Assign"
      input: "^beta1_power/Assign"
      input: "^beta2_power/Assign"
      input: "^conv1d/kernel/Adam/Assign"
      input: "^conv1d/kernel/Adam_1/Assign"
      input: "^conv1d/bias/Adam/Assign"
      input: "^conv1d/bias/Adam_1/Assign"
      input: "^conv1d_1/kernel/Adam/Assign"
      input: "^conv1d_1/kernel/Adam_1/Assign"
      input: "^conv1d_1/bias/Adam/Assign"
      input: "^conv1d_1/bias/Adam_1/Assign"
      input: "^w_output_p/Adam/Assign"
      input: "^w_output_p/Adam_1/Assign"
      input: "^bias_output_p/Adam/Assign"
      input: "^bias_output_p/Adam_1/Assign"
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: "beta1_power"
            string_val: "beta2_power"
            string_val: "bias_output_p"
            string_val: "bias_output_p/Adam"
            string_val: "bias_output_p/Adam_1"
            string_val: "conv1d/bias"
            string_val: "conv1d/bias/Adam"
            string_val: "conv1d/bias/Adam_1"
            string_val: "conv1d/kernel"
            string_val: "conv1d/kernel/Adam"
            string_val: "conv1d/kernel/Adam_1"
            string_val: "conv1d_1/bias"
            string_val: "conv1d_1/bias/Adam"
            string_val: "conv1d_1/bias/Adam_1"
            string_val: "conv1d_1/kernel"
            string_val: "conv1d_1/kernel/Adam"
            string_val: "conv1d_1/kernel/Adam_1"
            string_val: "w_output_p"
            string_val: "w_output_p/Adam"
            string_val: "w_output_p/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "beta1_power"
      input: "beta2_power"
      input: "bias_output_p"
      input: "bias_output_p/Adam"
      input: "bias_output_p/Adam_1"
      input: "conv1d/bias"
      input: "conv1d/bias/Adam"
      input: "conv1d/bias/Adam_1"
      input: "conv1d/kernel"
      input: "conv1d/kernel/Adam"
      input: "conv1d/kernel/Adam_1"
      input: "conv1d_1/bias"
      input: "conv1d_1/bias/Adam"
      input: "conv1d_1/bias/Adam_1"
      input: "conv1d_1/kernel"
      input: "conv1d_1/kernel/Adam"
      input: "conv1d_1/kernel/Adam_1"
      input: "w_output_p"
      input: "w_output_p/Adam"
      input: "w_output_p/Adam_1"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: "beta1_power"
            string_val: "beta2_power"
            string_val: "bias_output_p"
            string_val: "bias_output_p/Adam"
            string_val: "bias_output_p/Adam_1"
            string_val: "conv1d/bias"
            string_val: "conv1d/bias/Adam"
            string_val: "conv1d/bias/Adam_1"
            string_val: "conv1d/kernel"
            string_val: "conv1d/kernel/Adam"
            string_val: "conv1d/kernel/Adam_1"
            string_val: "conv1d_1/bias"
            string_val: "conv1d_1/bias/Adam"
            string_val: "conv1d_1/bias/Adam_1"
            string_val: "conv1d_1/kernel"
            string_val: "conv1d_1/kernel/Adam"
            string_val: "conv1d_1/kernel/Adam_1"
            string_val: "w_output_p"
            string_val: "w_output_p/Adam"
            string_val: "w_output_p/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "beta1_power"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "beta2_power"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "bias_output_p"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "bias_output_p/Adam"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "bias_output_p/Adam_1"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "conv1d/bias"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "conv1d/bias/Adam"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "conv1d/bias/Adam_1"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "conv1d/kernel"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "conv1d/kernel/Adam"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "conv1d/kernel/Adam_1"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "conv1d_1/bias"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "conv1d_1/bias/Adam"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "conv1d_1/bias/Adam_1"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "conv1d_1/kernel"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "conv1d_1/kernel/Adam"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "conv1d_1/kernel/Adam_1"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "w_output_p"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "w_output_p/Adam"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "w_output_p/Adam_1"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_2"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
    }
    node {
      name: "save_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_d824dcda62bc482c83e977f12b25b9b8/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: "beta1_power"
            string_val: "beta2_power"
            string_val: "bias_output_p"
            string_val: "bias_output_p/Adam"
            string_val: "bias_output_p/Adam_1"
            string_val: "conv1d/bias"
            string_val: "conv1d/bias/Adam"
            string_val: "conv1d/bias/Adam_1"
            string_val: "conv1d/kernel"
            string_val: "conv1d/kernel/Adam"
            string_val: "conv1d/kernel/Adam_1"
            string_val: "conv1d_1/bias"
            string_val: "conv1d_1/bias/Adam"
            string_val: "conv1d_1/bias/Adam_1"
            string_val: "conv1d_1/kernel"
            string_val: "conv1d_1/kernel/Adam"
            string_val: "conv1d_1/kernel/Adam_1"
            string_val: "w_output_p"
            string_val: "w_output_p/Adam"
            string_val: "w_output_p/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "beta1_power"
      input: "beta2_power"
      input: "bias_output_p"
      input: "bias_output_p/Adam"
      input: "bias_output_p/Adam_1"
      input: "conv1d/bias"
      input: "conv1d/bias/Adam"
      input: "conv1d/bias/Adam_1"
      input: "conv1d/kernel"
      input: "conv1d/kernel/Adam"
      input: "conv1d/kernel/Adam_1"
      input: "conv1d_1/bias"
      input: "conv1d_1/bias/Adam"
      input: "conv1d_1/bias/Adam_1"
      input: "conv1d_1/kernel"
      input: "conv1d_1/kernel/Adam"
      input: "conv1d_1/kernel/Adam_1"
      input: "w_output_p"
      input: "w_output_p/Adam"
      input: "w_output_p/Adam_1"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/control_dependency"
      input: "^save_1/MergeV2Checkpoints"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: "beta1_power"
            string_val: "beta2_power"
            string_val: "bias_output_p"
            string_val: "bias_output_p/Adam"
            string_val: "bias_output_p/Adam_1"
            string_val: "conv1d/bias"
            string_val: "conv1d/bias/Adam"
            string_val: "conv1d/bias/Adam_1"
            string_val: "conv1d/kernel"
            string_val: "conv1d/kernel/Adam"
            string_val: "conv1d/kernel/Adam_1"
            string_val: "conv1d_1/bias"
            string_val: "conv1d_1/bias/Adam"
            string_val: "conv1d_1/bias/Adam_1"
            string_val: "conv1d_1/kernel"
            string_val: "conv1d_1/kernel/Adam"
            string_val: "conv1d_1/kernel/Adam_1"
            string_val: "w_output_p"
            string_val: "w_output_p/Adam"
            string_val: "w_output_p/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 20
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "beta1_power"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "beta2_power"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "bias_output_p"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "bias_output_p/Adam"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "bias_output_p/Adam_1"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@bias_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "conv1d/bias"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "conv1d/bias/Adam"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "conv1d/bias/Adam_1"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "conv1d/kernel"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "conv1d/kernel/Adam"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "conv1d/kernel/Adam_1"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "conv1d_1/bias"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "conv1d_1/bias/Adam"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "conv1d_1/bias/Adam_1"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "conv1d_1/kernel"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "conv1d_1/kernel/Adam"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "conv1d_1/kernel/Adam_1"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "w_output_p"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "w_output_p/Adam"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "w_output_p/Adam_1"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@w_output_p"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10240
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 26
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "regularization_losses"
    value {
      node_list {
        value: "conv1d/kernel/Regularizer/add:0"
        value: "conv1d_1/kernel/Regularizer/add:0"
      }
    }
  }
  collection_def {
    key: "train_op"
    value {
      node_list {
        value: "Adam"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\017conv1d/kernel:0\022\024conv1d/kernel/Assign\032\024conv1d/kernel/read:02,conv1d/kernel/Initializer/truncated_normal:0"
        value: "\n\rconv1d/bias:0\022\022conv1d/bias/Assign\032\022conv1d/bias/read:02\037conv1d/bias/Initializer/zeros:0"
        value: "\n\021conv1d_1/kernel:0\022\026conv1d_1/kernel/Assign\032\026conv1d_1/kernel/read:02.conv1d_1/kernel/Initializer/truncated_normal:0"
        value: "\n\017conv1d_1/bias:0\022\024conv1d_1/bias/Assign\032\024conv1d_1/bias/read:02!conv1d_1/bias/Initializer/zeros:0"
        value: "\n\014w_output_p:0\022\021w_output_p/Assign\032\021w_output_p/read:02\'w_output_p/Initializer/random_uniform:0"
        value: "\n\017bias_output_p:0\022\024bias_output_p/Assign\032\024bias_output_p/read:02*bias_output_p/Initializer/random_uniform:0"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\017conv1d/kernel:0\022\024conv1d/kernel/Assign\032\024conv1d/kernel/read:02,conv1d/kernel/Initializer/truncated_normal:0"
        value: "\n\rconv1d/bias:0\022\022conv1d/bias/Assign\032\022conv1d/bias/read:02\037conv1d/bias/Initializer/zeros:0"
        value: "\n\021conv1d_1/kernel:0\022\026conv1d_1/kernel/Assign\032\026conv1d_1/kernel/read:02.conv1d_1/kernel/Initializer/truncated_normal:0"
        value: "\n\017conv1d_1/bias:0\022\024conv1d_1/bias/Assign\032\024conv1d_1/bias/read:02!conv1d_1/bias/Initializer/zeros:0"
        value: "\n\014w_output_p:0\022\021w_output_p/Assign\032\021w_output_p/read:02\'w_output_p/Initializer/random_uniform:0"
        value: "\n\017bias_output_p:0\022\024bias_output_p/Assign\032\024bias_output_p/read:02*bias_output_p/Initializer/random_uniform:0"
        value: "\n\rbeta1_power:0\022\022beta1_power/Assign\032\022beta1_power/read:02\033beta1_power/initial_value:0"
        value: "\n\rbeta2_power:0\022\022beta2_power/Assign\032\022beta2_power/read:02\033beta2_power/initial_value:0"
        value: "\n\024conv1d/kernel/Adam:0\022\031conv1d/kernel/Adam/Assign\032\031conv1d/kernel/Adam/read:02&conv1d/kernel/Adam/Initializer/zeros:0"
        value: "\n\026conv1d/kernel/Adam_1:0\022\033conv1d/kernel/Adam_1/Assign\032\033conv1d/kernel/Adam_1/read:02(conv1d/kernel/Adam_1/Initializer/zeros:0"
        value: "\n\022conv1d/bias/Adam:0\022\027conv1d/bias/Adam/Assign\032\027conv1d/bias/Adam/read:02$conv1d/bias/Adam/Initializer/zeros:0"
        value: "\n\024conv1d/bias/Adam_1:0\022\031conv1d/bias/Adam_1/Assign\032\031conv1d/bias/Adam_1/read:02&conv1d/bias/Adam_1/Initializer/zeros:0"
        value: "\n\026conv1d_1/kernel/Adam:0\022\033conv1d_1/kernel/Adam/Assign\032\033conv1d_1/kernel/Adam/read:02(conv1d_1/kernel/Adam/Initializer/zeros:0"
        value: "\n\030conv1d_1/kernel/Adam_1:0\022\035conv1d_1/kernel/Adam_1/Assign\032\035conv1d_1/kernel/Adam_1/read:02*conv1d_1/kernel/Adam_1/Initializer/zeros:0"
        value: "\n\024conv1d_1/bias/Adam:0\022\031conv1d_1/bias/Adam/Assign\032\031conv1d_1/bias/Adam/read:02&conv1d_1/bias/Adam/Initializer/zeros:0"
        value: "\n\026conv1d_1/bias/Adam_1:0\022\033conv1d_1/bias/Adam_1/Assign\032\033conv1d_1/bias/Adam_1/read:02(conv1d_1/bias/Adam_1/Initializer/zeros:0"
        value: "\n\021w_output_p/Adam:0\022\026w_output_p/Adam/Assign\032\026w_output_p/Adam/read:02#w_output_p/Adam/Initializer/zeros:0"
        value: "\n\023w_output_p/Adam_1:0\022\030w_output_p/Adam_1/Assign\032\030w_output_p/Adam_1/read:02%w_output_p/Adam_1/Initializer/zeros:0"
        value: "\n\024bias_output_p/Adam:0\022\031bias_output_p/Adam/Assign\032\031bias_output_p/Adam/read:02&bias_output_p/Adam/Initializer/zeros:0"
        value: "\n\026bias_output_p/Adam_1:0\022\033bias_output_p/Adam_1/Assign\032\033bias_output_p/Adam_1/read:02(bias_output_p/Adam_1/Initializer/zeros:0"
      }
    }
  }
  signature_def {
    key: "model"
    value {
      inputs {
        key: "input_prom"
        value {
          name: "input_prom:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 2001
            }
            dim {
              size: 4
            }
          }
        }
      }
      outputs {
        key: "output_prom"
        value {
          name: "Placeholder:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 2
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
